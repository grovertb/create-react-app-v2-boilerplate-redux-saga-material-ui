{"version":3,"sources":["routes/index.js","containers/Dashboard.js","containers/Home.js","App.js","index.js","reducers/index.js","sagas/index.js","store/configure.prod.js","containers/Root/prod.js","lib/MaterialTheme.js","reducers/theme.js","reducers/base.js","store/index.js","containers/Root/index.js"],"names":["history","Dashboard","react_default","a","createElement","react","Typography_default","gutterBottom","variant","this","props","children","Component","Home","routes","lib","Switch","containers_Dashboard","Route","component","exact","path","ReactDOM","render","Root_default","store","document","getElementById","combineReducers","Object","defineProperty","routing","routerReducer","theme","reducer","rootSaga","regenerator_default","wrap","_context","prev","next","all","stop","_marked","__webpack_require__","d","__webpack_exports__","configure_prod_history","createHistory","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","muiTheme","MaterialTheme","ligth","palette","type","primary","indigo","secondary","pink","error","red","contrastThreshold","background","default","status","danger","dark","Root","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","createMuiTheme","style","nextProps","_this$props","MuiThemeProvider_default","es","CssBaseline_default","connect","_ref","updateTheme","themeReducer","creators","base","namespace","_ref$initialState","initialState","selectors","Duck","consts","statuses","types","action","_ref2","produce","draft","UPDATE","key","EDITING","payload","FETCH_PENDING","LOADING","FETCH_FULFILLED","READY","FETCH_FOR_PATH_FULFILLED","dataForPath","FETCH_FOR_PATH_PENDING","POST_PENDING","PUT_PENDING","PATCH_PENDING","DELETE_PENDING","SAVING","POST_FULFILLED","PUT_FULFILLED","PATCH_FULFILLED","SAVED","id","DELETE_FULFILLED","DELETED","FETCH_FOR_PATH_FAILURE","FETCH_FAILURE","PUT_FAILURE","POST_FAILURE","PATCH_FAILURE","DELETE_FAILURE","ERROR","FETCH_CANCEL","POST_CANCEL","PUT_CANCEL","DELETE_CANCEL","PATCH_CANCEL","CANCEL","RESET","objectSpread","NEW","_ref3","extend","UPDATE_THEME","module","exports","require"],"mappings":"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","file":"static/js/main.4c136eff.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'react-router-redux'\r\n\r\nimport Dashboard from '../containers/Dashboard'\r\nimport Home from '../containers/Home'\r\n\r\nexport default history => (\r\n  <ConnectedRouter history={history}>\r\n    <Switch>\r\n      <Dashboard history={history}>\r\n        <Route component={Home} exact path='/' />\r\n      </Dashboard>\r\n    </Switch>\r\n  </ConnectedRouter>\r\n)\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Typography gutterBottom variant='display3'>\r\n          create-react-app-boilerplate-redux-saga-material-ui\r\n        </Typography>\r\n        {this.props.children}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        HOME\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\n\nimport store, { history } from './store'\nimport createRoutes from './routes'\nimport Root from './containers/Root'\n\n// if(process.env.NODE_ENV === 'test') {\n//   const { whyDidYouUpdate } = require('why-did-you-update')\n//   whyDidYouUpdate(React)\n// }\n\nconst routes = createRoutes(history)\n\nexport default () => <Root store={store}>{routes}</Root>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import './index.css'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// if(process.env.NODE_ENV === 'production')\n//   serviceWorker.register()\n// else\n//   serviceWorker.unregister()\n","import { combineReducers } from 'redux'\r\nimport { routerReducer } from 'react-router-redux'\r\n\r\nimport theme from './theme'\r\n\r\nexport default combineReducers({\r\n  routing      : routerReducer,\r\n  [theme.store]: theme.reducer\r\n})\r\n","import { all } from 'redux-saga/effects'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([])\r\n}\r\n","import { createStore, applyMiddleware /* compose*/ } from 'redux'\r\n// import { routerMiddleware } from 'react-router-redux'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport reducers from '../reducers'\r\nimport rootSaga from '../sagas'\r\n\r\nexport const history = createHistory()\r\n\r\n// const initialState = {}\r\nconst sagaMiddleware = createSagaMiddleware()\r\n// const middleware = [ sagaMiddleware, routerMiddleware(history) ]\r\n\r\n// const finalCreateStore = compose(applyMiddleware(...middleware))\r\n// const store = createStore(reducers, initialState, finalCreateStore)\r\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware))\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Provider, connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport MaterialTheme from '../../lib/MaterialTheme'\r\n\r\nimport themeReducer from '../../reducers/theme'\r\n\r\nlet muiTheme\r\n\r\nclass Root extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    muiTheme = createMuiTheme(MaterialTheme[this.props.theme.style])\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const {\r\n      theme: { style }\r\n    } = nextProps\r\n\r\n    if(this.props.theme.style !== style) {\r\n      muiTheme = createMuiTheme(MaterialTheme[style])\r\n\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { store, children } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <Provider store={store}>\r\n          <Fragment>\r\n            <CssBaseline />\r\n            {children}\r\n          </Fragment>\r\n        </Provider>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n  ({ theme }) => ({\r\n    theme\r\n  }),\r\n  {\r\n    updateTheme: themeReducer.creators.updateTheme\r\n  }\r\n)(Root)\r\n","import indigo from '@material-ui/core/colors/indigo'\r\nimport pink from '@material-ui/core/colors/pink'\r\nimport red from '@material-ui/core/colors/red'\r\n\r\nexport default {\r\n  ligth: {\r\n    palette: {\r\n      type             : 'light',\r\n      primary          : indigo,\r\n      secondary        : pink,\r\n      error            : red,\r\n      contrastThreshold: 4,\r\n      background       : {\r\n        'default': red\r\n      }\r\n      // typography: {\r\n      //   fontSize    : 12,\r\n      //   htmlFontSize: 20\r\n      // }\r\n      // primary: {\r\n      // light: purple[300], // will be calculated from palette.primary.main,\r\n      // main: purple[500]\r\n      // dark: purple[700] // will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n      // },\r\n      // secondary: {\r\n      // light: green[300],\r\n      // main: green[500]\r\n      // contrastText: '#ffcc00' //  will be calculated to contrast with palette.secondary.main\r\n      // dark: green[700] // will be calculated from palette.secondary.main,\r\n      // }\r\n    },\r\n    status: {\r\n      danger: 'orange'\r\n    }\r\n    // overrides: {\r\n    //   MuiButton: {\r\n    //     root: {\r\n    //       '&:hover': {\r\n    //         backgroundColor: 'purple',\r\n    //         color          : 'white'\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n    // overrides: {\r\n    //   // Name of the component ⚛️ / style sheet\r\n    //   MuiButton: {\r\n    //     // Name of the rule\r\n    //     root: {\r\n    //       // Some CSS\r\n    //       background  : 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    //       borderRadius: 3,\r\n    //       border      : 0,\r\n    //       color       : 'white',\r\n    //       height      : 48,\r\n    //       padding     : '0 30px',\r\n    //       boxShadow   : '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n    //     }\r\n    //   }\r\n    // }\r\n  },\r\n  dark: {\r\n    palette: {\r\n      type: 'dark'\r\n      // primary  : pink,\r\n      // secondary: indigo\r\n    }\r\n  }\r\n}\r\n","import base from './base'\r\n\r\nexport default base({\r\n  namespace   : 'boilerplate',\r\n  store       : 'theme',\r\n  initialState: {\r\n    style: 'ligth'\r\n  }\r\n}).extend({\r\n  types  : [ 'UPDATE_THEME' ],\r\n  reducer: (state, action, { types }) => {\r\n    switch (action.type) {\r\n      case types.UPDATE_THEME:\r\n        return {\r\n          ...state,\r\n          style: action.theme\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  },\r\n  creators: ({ types: { UPDATE_THEME } }) => ({\r\n    updateTheme: theme => ({ type: UPDATE_THEME, theme })\r\n  })\r\n})\r\n","import Duck from 'extensible-duck'\r\nimport produce from 'immer'\r\n\r\nexport default function createDuck({ namespace, store, initialState = {}, creators, selectors }) {\r\n  return new Duck({\r\n    namespace,\r\n    store,\r\n    consts: {\r\n      statuses: [ 'NEW', 'LOADING', 'READY', 'SAVING', 'SAVED', 'DELETED', 'ERROR', 'CANCEL', 'EDITING' ]\r\n    },\r\n    types: [\r\n      'REMOVE',\r\n      'UPDATE',\r\n      'FETCH',\r\n      'FETCH_PENDING',\r\n      'FETCH_FULFILLED',\r\n      'FETCH_FAILURE',\r\n      'FETCH_CANCEL',\r\n      'FETCH_FOR_PATH',\r\n      'FETCH_FOR_PATH_PENDING',\r\n      'FETCH_FOR_PATH_FULFILLED',\r\n      'FETCH_FOR_PATH_FAILURE',\r\n      'PUT',\r\n      'PUT_PENDING',\r\n      'PUT_FULFILLED',\r\n      'PUT_FAILURE',\r\n      'PUT_CANCEL',\r\n      'PUT',\r\n      'POST',\r\n      'POST_PENDING',\r\n      'POST_FULFILLED',\r\n      'POST_FAILURE',\r\n      'POST_CANCEL',\r\n      'DELETE',\r\n      'DELETE_PENDING',\r\n      'DELETE_FULFILLED',\r\n      'DELETE_FAILURE',\r\n      'DELETE_CANCEL',\r\n      'RESET',\r\n      'PATCH',\r\n      'PATCH_PENDING',\r\n      'PATCH_FULFILLED',\r\n      'PATCH_FAILURE',\r\n      'PATCH_CANCEL'\r\n    ],\r\n    reducer: (state, action, { types, statuses }) => {\r\n      return produce(state, draft => {\r\n        switch (action.type) {\r\n          case types.UPDATE:\r\n            if(draft.status !== statuses.EDITING) draft.status = statuses.EDITING\r\n            for (let key in action.payload) draft[key] = action.payload[key]\r\n\r\n            return\r\n          case types.FETCH_PENDING:\r\n            draft.status = statuses.LOADING\r\n\r\n            return\r\n          case types.FETCH_FULFILLED:\r\n            for (let key in action.payload) draft[key] = action.payload[key]\r\n            draft.status = statuses.READY\r\n\r\n            return\r\n          case types.FETCH_FOR_PATH_FULFILLED:\r\n            if(action.dataForPath) draft.dataForPath = action.dataForPath\r\n            for (let key in action.payload) draft[key] = action.payload[key]\r\n            draft.status = statuses.READY\r\n\r\n            return\r\n          case types.FETCH_FOR_PATH_PENDING:\r\n          case types.POST_PENDING:\r\n          case types.PUT_PENDING:\r\n          case types.PATCH_PENDING:\r\n          case types.DELETE_PENDING:\r\n            draft.status = statuses.SAVING\r\n\r\n            return\r\n          case types.POST_FULFILLED:\r\n          case types.PUT_FULFILLED:\r\n          case types.PATCH_FULFILLED:\r\n            draft.status = statuses.SAVED\r\n            if(action.id) draft.id = action.id\r\n            for (let key in action.payload) draft[key] = action.payload[key]\r\n\r\n            return\r\n          case types.DELETE_FULFILLED:\r\n            draft.status = statuses.DELETED\r\n\r\n            return\r\n          case types.FETCH_FOR_PATH_FAILURE:\r\n          case types.FETCH_FAILURE:\r\n          case types.PUT_FAILURE:\r\n          case types.POST_FAILURE:\r\n          case types.PATCH_FAILURE:\r\n          case types.DELETE_FAILURE:\r\n            draft.status = statuses.ERROR\r\n            draft.error = action.error\r\n\r\n            return\r\n          case types.FETCH_CANCEL:\r\n          case types.POST_CANCEL:\r\n          case types.PUT_CANCEL:\r\n          case types.DELETE_CANCEL:\r\n          case types.PATCH_CANCEL:\r\n            draft.status = statuses.CANCEL\r\n\r\n            return\r\n          case types.RESET:\r\n            return {\r\n              ...initialState,\r\n              status: statuses.NEW,\r\n              error : null\r\n            }\r\n          default:\r\n            return\r\n        }\r\n      })\r\n    },\r\n    selectors,\r\n    creators,\r\n    initialState: ({ statuses }) => ({\r\n      ...initialState,\r\n      status: statuses.NEW,\r\n      error : null\r\n    })\r\n  })\r\n}\r\n","module.exports = process.env.NODE_ENV === 'production' ? require('./configure.prod') : require('./configure.dev')\r\n","module.exports = process.env.NODE_ENV === 'production' ? require('./prod') : require('./dev')\r\n"],"sourceRoot":""}