{"version":3,"sources":["sources/logo.svg","reducers/theme.js","reducers/base.js","reducers/index.js","sagas/index.js","containers/DevTools.js","store/configureStore.js","routes/index.js","containers/Home.js","containers/Root.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","base","_ref","namespace","store","_ref$initialState","initialState","creators","selectors","style","Duck","consts","statuses","types","reducer","state","action","_ref2","produce","draft","type","UPDATE","key","status","EDITING","payload","FETCH_PENDING","LOADING","FETCH_FULFILLED","READY","FETCH_FOR_PATH_FULFILLED","dataForPath","FETCH_FOR_PATH_PENDING","POST_PENDING","PUT_PENDING","PATCH_PENDING","DELETE_PENDING","SAVING","POST_FULFILLED","PUT_FULFILLED","PATCH_FULFILLED","SAVED","id","DELETE_FULFILLED","DELETED","FETCH_FOR_PATH_FAILURE","FETCH_FAILURE","PUT_FAILURE","POST_FAILURE","PATCH_FAILURE","DELETE_FAILURE","ERROR","error","FETCH_CANCEL","POST_CANCEL","PUT_CANCEL","DELETE_CANCEL","PATCH_CANCEL","CANCEL","RESET","Object","objectSpread","NEW","_ref3","extend","UPDATE_THEME","theme","updateTheme","combineReducers","defineProperty","routing","routerReducer","rootSaga","regenerator_default","a","wrap","_context","prev","next","all","stop","_marked","this","createDevTools","react_default","createElement","redux_devtools_dock_monitor_lib_default","changePositionKey","defaultIsVisible","toggleVisibilityKey","redux_devtools_log_monitor_lib_default","history","createHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","createLogger","finalCreateStore","compose","applyMiddleware","apply","DevTools","instrument","createStore","reducers","run","Home","className","alt","src","logo","href","rel","target","Component","Root","_this$props","props","children","react_redux_es","routes","es","Switch","Route","component","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","Root_Root","renderMethod","ReactDOM","hydrate","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8317f12f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import base from './base'\r\n\r\nexport default base({\r\n  namespace   : 'boilerplate',\r\n  store       : 'theme',\r\n  initialState: {\r\n    style: 'ligth'\r\n  }\r\n}).extend({\r\n  types  : [ 'UPDATE_THEME' ],\r\n  reducer: (state, action, { types }) => {\r\n    switch (action.type) {\r\n      case types.UPDATE_THEME:\r\n        return {\r\n          ...state,\r\n          style: action.theme\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  },\r\n  creators: ({ types: { UPDATE_THEME } }) => ({\r\n    updateTheme: theme => ({ type: UPDATE_THEME, theme })\r\n  })\r\n})\r\n","import Duck from 'extensible-duck'\nimport produce from 'immer'\n\nexport default function createDuck({ namespace, store, initialState = {}, creators, selectors }) {\n  return new Duck({\n    namespace,\n    store,\n    consts: {\n      statuses: [ 'NEW', 'LOADING', 'READY', 'SAVING', 'SAVED', 'DELETED', 'ERROR', 'CANCEL', 'EDITING' ]\n    },\n    types: [\n      'REMOVE',\n      'UPDATE',\n      'FETCH',\n      'FETCH_PENDING',\n      'FETCH_FULFILLED',\n      'FETCH_FAILURE',\n      'FETCH_CANCEL',\n      'FETCH_FOR_PATH',\n      'FETCH_FOR_PATH_PENDING',\n      'FETCH_FOR_PATH_FULFILLED',\n      'FETCH_FOR_PATH_FAILURE',\n      'PUT',\n      'PUT_PENDING',\n      'PUT_FULFILLED',\n      'PUT_FAILURE',\n      'PUT_CANCEL',\n      'PUT',\n      'POST',\n      'POST_PENDING',\n      'POST_FULFILLED',\n      'POST_FAILURE',\n      'POST_CANCEL',\n      'DELETE',\n      'DELETE_PENDING',\n      'DELETE_FULFILLED',\n      'DELETE_FAILURE',\n      'DELETE_CANCEL',\n      'RESET',\n      'PATCH',\n      'PATCH_PENDING',\n      'PATCH_FULFILLED',\n      'PATCH_FAILURE',\n      'PATCH_CANCEL'\n    ],\n    reducer: (state, action, { types, statuses }) => {\n      return produce(state, draft => {\n        switch (action.type) {\n          case types.UPDATE:\n            if(draft.status !== statuses.EDITING) draft.status = statuses.EDITING\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.FETCH_PENDING:\n            draft.status = statuses.LOADING\n\n            return\n          case types.FETCH_FULFILLED:\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_FULFILLED:\n            if(action.dataForPath) draft.dataForPath = action.dataForPath\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_PENDING:\n          case types.POST_PENDING:\n          case types.PUT_PENDING:\n          case types.PATCH_PENDING:\n          case types.DELETE_PENDING:\n            draft.status = statuses.SAVING\n\n            return\n          case types.POST_FULFILLED:\n          case types.PUT_FULFILLED:\n          case types.PATCH_FULFILLED:\n            draft.status = statuses.SAVED\n            if(action.id) draft.id = action.id\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.DELETE_FULFILLED:\n            draft.status = statuses.DELETED\n\n            return\n          case types.FETCH_FOR_PATH_FAILURE:\n          case types.FETCH_FAILURE:\n          case types.PUT_FAILURE:\n          case types.POST_FAILURE:\n          case types.PATCH_FAILURE:\n          case types.DELETE_FAILURE:\n            draft.status = statuses.ERROR\n            draft.error = action.error\n\n            return\n          case types.FETCH_CANCEL:\n          case types.POST_CANCEL:\n          case types.PUT_CANCEL:\n          case types.DELETE_CANCEL:\n          case types.PATCH_CANCEL:\n            draft.status = statuses.CANCEL\n\n            return\n          case types.RESET:\n            return {\n              ...initialState,\n              status: statuses.NEW,\n              error : null\n            }\n          default:\n            return\n        }\n      })\n    },\n    selectors,\n    creators,\n    initialState: ({ statuses }) => ({\n      ...initialState,\n      status: statuses.NEW,\n      error : null\n    })\n  })\n}\n","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\n\nimport theme from './theme'\n\nexport default combineReducers({\n  routing      : routerReducer,\n  [theme.store]: theme.reducer\n})\n","import { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n  yield all([])\n}\n","import React from 'react'\r\nimport { createDevTools } from 'redux-devtools'\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nexport default createDevTools(\r\n  <DockMonitor changePositionKey='ctrl-q' defaultIsVisible={false} toggleVisibilityKey='ctrl-h'>\r\n    <LogMonitor />\r\n  </DockMonitor>\r\n)\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport reducers from '../reducers'\r\nimport rootSaga from '../sagas'\r\nimport DevTools from '../containers/DevTools'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [ sagaMiddleware, routerMiddleware(history), createLogger() ]\r\n\r\nconst finalCreateStore = compose(\r\n  applyMiddleware(...middleware),\r\n  DevTools.instrument()\r\n)\r\n\r\nconst store = createStore(reducers, initialState, finalCreateStore)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'react-router-redux'\r\n// import loadable from 'loadable-components'\r\n\r\n// import Loading from 'components/Common/Loading'\r\n\r\n// const Dashboard = loadable(() => import(/* webpackChunkName: \"Dashboard\" */ 'containers/Dashboard'), {\r\n//   LoadingComponent: () => <Loading />\r\n// })\r\n\r\n// const Home = loadable(() => import(/* webpackChunkName: \"Home\" */ 'containers/Home'), {\r\n//   LoadingComponent: () => <Loading />\r\n// })\r\n\r\nimport Home from '../containers/Home'\r\n\r\nexport default history => (\r\n  <ConnectedRouter history={history}>\r\n    <Switch>\r\n      {/* <Dashboard history={history}> */}\r\n      <Route component={Home} exact path='/' />\r\n      {/* </Dashboard> */}\r\n    </Switch>\r\n  </ConnectedRouter>\r\n)\r\n","import React, { Component } from 'react'\r\nimport logo from '../sources/logo.svg'\r\n\r\nimport '../components/App.css'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <img alt='logo' className='App-logo' src={logo} />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\n            className='App-link' href='https://reactjs.org' rel='noopener noreferrer'\n            target='_blank'>\r\n            create-react-app-v2\r\n          </a>\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    const { store, children } = this.props\r\n\r\n    return <Provider store={store}>{children}</Provider>\r\n  }\r\n}\r\n","import React from 'react'\n\nimport store, { history } from './store/configureStore'\nimport createRoutes from './routes'\nimport Root from './containers/Root'\n\nconst routes = createRoutes(history)\n\nexport default () => <Root store={store}>{routes}</Root>\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if(process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if(publicUrl.origin !== window.location.origin)\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if(isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if(installingWorker.state === 'installed')\n            if(navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if(config.onUpdate) config.onUpdate(registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if(config.onSuccess) config.onSuccess(registration)\n            }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if(response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1)\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      // Service worker found. Proceed as normal.\n      else registerValidSW(swUrl, config)\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if('serviceWorker' in navigator)\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\nimport './components/index.css'\n\nconst render = Component => {\n  const renderMethod = !!module.hot ? ReactDOM.render : ReactDOM.hydrate\n  renderMethod(<Component />, document.getElementById('root'))\n}\n\nrender(App)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register()\n"],"sourceRoot":""}