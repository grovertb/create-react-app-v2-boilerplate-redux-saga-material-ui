{"version":3,"sources":["routes/index.js","containers/Dashboard.js","containers/Home.js","App.js","serviceWorker.js","index.js","reducers/index.js","sagas/index.js","store/prod.js","containers/Root.prod.js","lib/MaterialTheme.js","reducers/theme.js","reducers/base.js","store/configureStore.js","sources/logo.svg","containers/Root.js"],"names":["history","Dashboard","react_default","a","createElement","react","AppBar_default","position","Toolbar_default","variant","IconButton_default","aria-label","color","Menu_default","Typography_default","this","props","children","Component","Home","state","checkedB","_this$props","style","theme","updateTheme","Switch_default","checked","onChange","value","Button_default","disabled","href","AccessAlarm_default","ThreeDRotation_default","accept","id","multiple","display","type","htmlFor","component","className","alt","src","logo","rel","target","connect","_ref","themeReducer","creators","routes","es","Switch","containers_Dashboard","Route","exact","path","concat","process","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Root_default","store","document","getElementById","arguments","length","undefined","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","combineReducers","Object","defineProperty","routing","routerReducer","reducer","rootSaga","regenerator_default","wrap","_context","prev","next","all","stop","_marked","__webpack_require__","d","__webpack_exports__","prod_history","createHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","finalCreateStore","compose","applyMiddleware","apply","createStore","reducers","run","muiTheme","MaterialTheme","ligth","palette","primary","indigo","secondary","pink","dark","Root","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createMuiTheme","nextProps","MuiThemeProvider_default","CssBaseline_default","base","namespace","_ref$initialState","initialState","selectors","Duck","consts","statuses","types","action","_ref2","produce","draft","UPDATE","key","EDITING","payload","FETCH_PENDING","LOADING","FETCH_FULFILLED","READY","FETCH_FOR_PATH_FULFILLED","dataForPath","FETCH_FOR_PATH_PENDING","POST_PENDING","PUT_PENDING","PATCH_PENDING","DELETE_PENDING","SAVING","POST_FULFILLED","PUT_FULFILLED","PATCH_FULFILLED","SAVED","DELETE_FULFILLED","DELETED","FETCH_FOR_PATH_FAILURE","FETCH_FAILURE","PUT_FAILURE","POST_FAILURE","PATCH_FAILURE","DELETE_FAILURE","ERROR","FETCH_CANCEL","POST_CANCEL","PUT_CANCEL","DELETE_CANCEL","PATCH_CANCEL","CANCEL","RESET","objectSpread","NEW","_ref3","extend","UPDATE_THEME","localStorage","setItem","getItem","module","exports","require","p"],"mappings":"uLAkBeA,2MCWAC,mLAlBX,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAASM,QAAQ,SACfP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,aAAW,OAAOC,MAAM,WAClCV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OAEFD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYS,MAAM,UAAUH,QAAQ,SAApC,4DAKHM,KAAKC,MAAMC,iBAdIC,kHCIlBC,qNACJC,MAAQ,CACNC,UAAU,2EAGH,IAAAC,EAIHP,KAAKC,MAFEO,EAFJD,EAELE,MAASD,MACTE,EAHKH,EAGLG,YAGF,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,QAAmB,UAAVJ,EAAmBX,MAAM,UAAUgB,SAAU,kBAAMH,EAAsB,UAAVF,EAAoB,OAAS,UACrGM,MAAM,aACR3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,gBACAD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQS,MAAM,WAAd,WACAV,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQS,MAAM,aAAd,aACAV,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQ4B,UAAQ,GAAhB,YACA7B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQ6B,KAAK,iBAAb,QACA9B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQS,MAAM,UAAUH,QAAQ,aAAhC,WAGAP,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQS,MAAM,YAAYH,QAAQ,aAAlC,aAGAP,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQS,MAAM,UAAUH,QAAQ,OAC9BP,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,OAEFD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQQ,aAAW,OAAOC,MAAM,YAAYH,QAAQ,OAClDP,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,OAEFD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQQ,aAAW,SAASF,QAAQ,eAClCP,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,MADF,YAIAD,EAAAC,EAAAC,cAAA,SACE+B,OAAO,UAAUC,GAAG,mBAAmBC,UAAQ,EAC/Cd,MAAO,CAAEe,QAAS,QAAUC,KAAK,SACnCrC,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,oBACbtC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQsC,UAAU,QAAlB,WAEFvC,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,OACbxC,EAAAC,EAAAC,cAAA,UAAQsC,UAAU,cAChBxC,EAAAC,EAAAC,cAAA,OAAKuC,IAAI,OAAOD,UAAU,WAAWE,IAAKC,MAC1C3C,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYS,MAAM,UAAUH,QAAQ,SAApC,QACOP,EAAAC,EAAAC,cAAA,sCADP,wBAGAF,EAAAC,EAAAC,cAAA,KACEsC,UAAU,WAAWV,KAAK,sBAAsBc,IAAI,sBACpDC,OAAO,UAFT,iCAjDO7B,cA6DJ8B,cACb,SAAAC,GAAA,MAAgB,CACdzB,MADFyB,EAAGzB,QAGH,CACEC,YAAayB,IAAaC,SAAS1B,aALxBuB,CAOb7B,oBC3EIiC,GHYSpD,EGZaA,UHa1BE,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBrD,QAASA,GACxBE,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAACmD,EAAD,CAAWvD,QAASA,GAClBE,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOf,UAAWtB,EAAMsC,OAAK,EAACC,KAAI,GAAAC,OAAKC,0DAAL,WIZpCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAiCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACD,cAA3BF,EAAiBxD,QACfkD,UAAUC,cAAcQ,YAKzBC,QAAQC,IAAI,6CAETZ,EAAOa,UAAUb,EAAOa,SAASR,KAKpCM,QAAQC,IAAI,sCAGTZ,EAAOc,WAAWd,EAAOc,UAAUT,SAK/CU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,YC/DjEC,IAASC,OAAOrF,EAAAC,EAAAC,cFND,kBAAMF,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMsF,MAAOA,KAAQrC,IEM1B,MAASsC,SAASC,eAAe,SDI1C,WAA+B,IAAbtB,EAAauB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAChC,GAA4C,kBAAmBtB,UAAW,CAGxE,GADkB,IAAIyB,IAAInC,0DAAwBG,OAAOC,UAC5CgC,SAAWjC,OAAOC,SAASgC,OAItC,OAEFjC,OAAOkC,iBAAiB,OAAQ,WAC9B,IAAM7B,EAAK,GAAAT,OAAMC,0DAAN,sBAERC,GAkDT,SAAiCO,EAAOC,GAEtC6B,MAAM9B,GACHK,KAAK,SAAA0B,GAEmB,MAApBA,EAASC,SAAkF,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAEzEjC,UAAUC,cAAciC,MAAM/B,KAAK,SAAAC,GACjCA,EAAa+B,aAAahC,KAAK,WAC7BV,OAAOC,SAAS0C,aAIjBvC,EAAgBC,EAAOC,KAE7Be,MAAM,WACLJ,QAAQC,IAAI,mEAhEV0B,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,KAAK,WACjCO,QAAQC,IAAI,+GAIdd,EAAgBC,EAAOC,MCvBWE,0GCd3BqC,cAAgBC,OAAAC,EAAA,EAAAD,CAAA,CAC7BE,QAAeC,KACdxF,IAAMiE,MAAQjE,IAAMyF,8CCLEC,GAAV,SAAUA,IAAV,OAAAC,EAAAhH,EAAAiH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPC,YAAI,IADG,wBAAAH,EAAAI,SAAAC,EAAA3G,MCFf4G,EAAAC,EAAAC,EAAA,4BAAAC,IAQO,IAAM9H,EAAU+H,MAGjBC,EAAiBC,cACjBC,EAAa,CAAEF,EAAgBG,YAAiBnI,IAEhDoI,EAAmBC,YAAQC,IAAeC,WAAf,EAAmBL,IAC9CzC,EAAQ+C,YAAYC,EALL,GAK6BL,GAElDJ,EAAeU,IAAIxB,GAEJzB,yDCPXkD,uJCTJC,EAAA,CACEC,MAAO,CACLC,QAAS,CACPvG,KAAW,QACXwG,QAAWC,IACXC,UAAWC,MAGfC,KAAM,CACJL,QAAS,CACPvG,KAAW,OACXwG,QAAWG,IACXD,UAAWD,eDDXI,cACJ,SAAAA,EAAYpI,GAAO,IAAAqI,EAAA,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAA9F,KAAAqI,IACjBC,EAAAxC,OAAA0C,EAAA,EAAA1C,CAAA9F,KAAA8F,OAAA2C,EAAA,EAAA3C,CAAAuC,GAAAK,KAAA1I,KAAMC,KACDI,MAAQ,GACbuH,EAAWe,IAAed,EAAcS,EAAKrI,MAAMQ,MAAMD,QAHxC8H,qFAMGM,GAAW,IAEpBpI,EACPoI,EADFnI,MAASD,MAGX,OAAGR,KAAKC,MAAMQ,MAAMD,QAAUA,IAC5BoH,EAAWe,IAAed,EAAcrH,KAEjC,oCAMF,IAAAD,EACqBP,KAAKC,MAAzByE,EADDnE,EACCmE,MAAOxE,EADRK,EACQL,SAEf,OACEf,EAAAC,EAAAC,cAACwJ,EAAAzJ,EAAD,CAAkBqB,MAAOmH,GACvBzI,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAUoC,MAAOA,GACfvF,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACyJ,EAAA1J,EAAD,MACCc,YA7BMC,aAyCJ8B,sBACb,SAAAC,GAAA,MAAgB,CACdzB,MADFyB,EAAGzB,QAGH,CACEC,YAAayB,IAAaC,SAAS1B,aALxBuB,CAOboG,yEE3DaU,ICAA7G,EAAsB8G,EAAWtE,EAAiDuE,EAA1CC,EAAmB9G,EAAU+G,EDArEJ,KCAA7G,EDAK,CAClB8G,UAAc,cACdtE,MAAc,QACdwE,aAAc,CACZ1I,MAAO,UCJ0BwI,EAA4D9G,EAA5D8G,UAAWtE,EAAiDxC,EAAjDwC,MAAiDuE,EAAA/G,EAA1CgH,oBAA0C,IAAAD,EAA3B,GAA2BA,EAAvB7G,EAAuBF,EAAvBE,SAAU+G,EAAajH,EAAbiH,UAC3E,IAAIC,IAAK,CACdJ,YACAtE,QACA2E,OAAQ,CACNC,SAAU,CAAE,MAAO,UAAW,QAAS,SAAU,QAAS,UAAW,QAAS,SAAU,YAE1FC,MAAO,CACL,SACA,SACA,QACA,gBACA,kBACA,gBACA,eACA,iBACA,yBACA,2BACA,yBACA,MACA,cACA,gBACA,cACA,aACA,MACA,OACA,eACA,iBACA,eACA,cACA,SACA,iBACA,mBACA,iBACA,gBACA,QACA,QACA,gBACA,kBACA,gBACA,gBAEFrD,QAAS,SAAC7F,EAAOmJ,EAARC,GAAwC,IAAtBF,EAAsBE,EAAtBF,MAAOD,EAAeG,EAAfH,SAChC,OAAOI,YAAQrJ,EAAO,SAAAsJ,GACpB,OAAQH,EAAOhI,MACb,KAAK+H,EAAMK,OAET,IAAK,IAAIC,KADNF,EAAMtE,SAAWiE,EAASQ,UAASH,EAAMtE,OAASiE,EAASQ,SAC9CN,EAAOO,QAASJ,EAAME,GAAOL,EAAOO,QAAQF,GAE5D,OACF,KAAKN,EAAMS,cAGT,YAFAL,EAAMtE,OAASiE,EAASW,SAG1B,KAAKV,EAAMW,gBACT,IAAK,IAAIL,KAAOL,EAAOO,QAASJ,EAAME,GAAOL,EAAOO,QAAQF,GAG5D,YAFAF,EAAMtE,OAASiE,EAASa,OAG1B,KAAKZ,EAAMa,yBAET,IAAK,IAAIP,KADNL,EAAOa,cAAaV,EAAMU,YAAcb,EAAOa,aAClCb,EAAOO,QAASJ,EAAME,GAAOL,EAAOO,QAAQF,GAG5D,YAFAF,EAAMtE,OAASiE,EAASa,OAG1B,KAAKZ,EAAMe,uBACX,KAAKf,EAAMgB,aACX,KAAKhB,EAAMiB,YACX,KAAKjB,EAAMkB,cACX,KAAKlB,EAAMmB,eAGT,YAFAf,EAAMtE,OAASiE,EAASqB,QAG1B,KAAKpB,EAAMqB,eACX,KAAKrB,EAAMsB,cACX,KAAKtB,EAAMuB,gBAGT,IAAK,IAAIjB,KAFTF,EAAMtE,OAASiE,EAASyB,MACrBvB,EAAOnI,KAAIsI,EAAMtI,GAAKmI,EAAOnI,IAChBmI,EAAOO,QAASJ,EAAME,GAAOL,EAAOO,QAAQF,GAE5D,OACF,KAAKN,EAAMyB,iBAGT,YAFArB,EAAMtE,OAASiE,EAAS2B,SAG1B,KAAK1B,EAAM2B,uBACX,KAAK3B,EAAM4B,cACX,KAAK5B,EAAM6B,YACX,KAAK7B,EAAM8B,aACX,KAAK9B,EAAM+B,cACX,KAAK/B,EAAMgC,eAIT,OAHA5B,EAAMtE,OAASiE,EAASkC,WACxB7B,EAAMrF,MAAQkF,EAAOlF,OAGvB,KAAKiF,EAAMkC,aACX,KAAKlC,EAAMmC,YACX,KAAKnC,EAAMoC,WACX,KAAKpC,EAAMqC,cACX,KAAKrC,EAAMsC,aAGT,YAFAlC,EAAMtE,OAASiE,EAASwC,QAG1B,KAAKvC,EAAMwC,MACT,OAAOjG,OAAAkG,EAAA,EAAAlG,CAAA,GACFoD,EADL,CAEE7D,OAAQiE,EAAS2C,IACjB3H,MAAQ,OAEZ,QACE,WAIR6E,YACA/G,WACA8G,aAAc,SAAAgD,GAAA,IAAG5C,EAAH4C,EAAG5C,SAAH,OAAAxD,OAAAkG,EAAA,EAAAlG,CAAA,GACToD,EADS,CAEZ7D,OAAQiE,EAAS2C,IACjB3H,MAAQ,WDjHX6H,OAAO,CACR5C,MAAS,CAAE,gBACXrD,QAAS,SAAC7F,EAAOmJ,EAARtH,GAAA,IAAkBqH,EAAlBrH,EAAkBqH,MAAlB,OACPG,YAAQrJ,EAAO,SAAAsJ,GACb,OAAQH,EAAOhI,MACb,KAAK+H,EAAM6C,aAGT,OAFAC,aAAaC,QAAQ,QAAS9C,EAAO/I,OAE9BqF,OAAAkG,EAAA,EAAAlG,CAAA,GACFzF,EADL,CAEEG,MAAOgJ,EAAO/I,QAElB,QAGE,YAFAkJ,EAAMnJ,MAAQ6L,aAAaE,QAAQ,UAAYlM,EAAMG,WAK7D4B,SAAU,SAAAqH,GAAA,IAAY2C,EAAZ3C,EAAGF,MAAS6C,aAAZ,MAAkC,CAC1C1L,YAAa,SAAAD,GAAK,MAAK,CAAEe,KAAM4K,EAAc3L,kCE5BjD+L,EAAOC,QAAkDC,EAAQ,yBCAjEF,EAAAC,QAAiB7F,EAAA+F,EAAuB,qDCAxCH,EAAOC,QAAkDC,EAAQ","file":"static/js/main.b1c36f6f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'react-router-redux'\r\n// import loadable from 'loadable-components'\r\n\r\n// import Loading from 'components/Common/Loading'\r\n\r\n// const Dashboard = loadable(() => import(/* webpackChunkName: \"Dashboard\" */ 'containers/Dashboard'), {\r\n//   LoadingComponent: () => <Loading />\r\n// })\r\n\r\n// const Home = loadable(() => import(/* webpackChunkName: \"Home\" */ 'containers/Home'), {\r\n//   LoadingComponent: () => <Loading />\r\n// })\r\n\r\nimport Dashboard from '../containers/Dashboard'\r\nimport Home from '../containers/Home'\r\n\r\nexport default history => (\r\n  <ConnectedRouter history={history}>\r\n    <Switch>\r\n      <Dashboard history={history}>\r\n        <Route component={Home} exact path={`${process.env.PUBLIC_URL}/`} />\r\n      </Dashboard>\r\n    </Switch>\r\n  </ConnectedRouter>\r\n)\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <AppBar position='static'>\r\n          <Toolbar variant='dense'>\r\n            <IconButton aria-label='Menu' color='inherit'>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography color='inherit' variant='title'>\r\n              create-react-app-v2-boilerplate-redux-saga-material-ui\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.props.children}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm'\r\nimport ThreeDRotation from '@material-ui/icons/ThreeDRotation'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport themeReducer from '../reducers/theme'\r\nimport logo from '../sources/logo.svg'\r\nimport '../components/App.css'\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    checkedB: false\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      theme: { style },\r\n      updateTheme\r\n    } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <Switch\n          checked={style === 'ligth'} color='primary' onChange={() => updateTheme(style === 'ligth' ? 'dark' : 'ligth')}\n          value='checkedB' />\r\n        <Button>Default</Button>\r\n        <Button color='primary'>Primary</Button>\r\n        <Button color='secondary'>Secondary</Button>\r\n        <Button disabled>Disabled</Button>\r\n        <Button href='#text-buttons'>Link</Button>\r\n        <Button color='primary' variant='contained'>\r\n          Primary\r\n        </Button>\r\n        <Button color='secondary' variant='contained'>\r\n          Secondary\r\n        </Button>\r\n        <Button color='primary' variant='fab'>\r\n          <AccessAlarmIcon />\r\n        </Button>\r\n        <Button aria-label='Edit' color='secondary' variant='fab'>\r\n          <ThreeDRotation />\r\n        </Button>\r\n        <Button aria-label='Delete' variant='extendedFab'>\r\n          <ThreeDRotation />\r\n          Extended\r\n        </Button>\r\n        <input\n          accept='image/*' id='flat-button-file' multiple\n          style={{ display: 'none' }} type='file' />\r\n        <label htmlFor='flat-button-file'>\r\n          <Button component='span'>Upload</Button>\r\n        </label>\r\n        <div className='App'>\r\n          <header className='App-header'>\r\n            <img alt='logo' className='App-logo' src={logo} />\r\n            <Typography color='inherit' variant='title'>\r\n              Edit <code>src/containers/Home.js</code> and save to reload.\r\n            </Typography>\r\n            <a\n              className='App-link' href='https://reactjs.org' rel='noopener noreferrer'\n              target='_blank'>\r\n              create-react-app-v2\r\n            </a>\r\n          </header>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ theme }) => ({\r\n    theme\r\n  }),\r\n  {\r\n    updateTheme: themeReducer.creators.updateTheme\r\n  }\r\n)(Home)\r\n","import React from 'react'\n\nimport store, { history } from './store/configureStore'\nimport createRoutes from './routes'\nimport Root from './containers/Root'\n\nconst routes = createRoutes(history)\n\nexport default () => <Root store={store}>{routes}</Root>\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config = {}) {\n  if(process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if(publicUrl.origin !== window.location.origin)\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if(isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if(installingWorker.state === 'installed')\n            if(navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n              // Execute callback\n              if(config.onUpdate) config.onUpdate(registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if(config.onSuccess) config.onSuccess(registration)\n            }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if(response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1)\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      // Service worker found. Proceed as normal.\n      else registerValidSW(swUrl, config)\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if('serviceWorker' in navigator)\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\nimport './components/index.css'\n\n// const render = Component => {\n//   const renderMethod = !!module.hot ? ReactDOM.render : ReactDOM.hydrate\n//   renderMethod(<Component />, document.getElementById('root'))\n// }\n\n// render(App)\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register()\n","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\n\nimport theme from './theme'\n\nexport default combineReducers({\n  routing      : routerReducer,\n  [theme.store]: theme.reducer\n})\n","import { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n  yield all([])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport reducers from '../reducers'\r\nimport rootSaga from '../sagas'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [ sagaMiddleware, routerMiddleware(history) ]\r\n\r\nconst finalCreateStore = compose(applyMiddleware(...middleware))\r\nconst store = createStore(reducers, initialState, finalCreateStore)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Provider, connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport MaterialTheme from '../lib/MaterialTheme'\r\n\r\nimport themeReducer from '../reducers/theme'\r\n\r\nlet muiTheme\r\n\r\nclass Root extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    muiTheme = createMuiTheme(MaterialTheme[this.props.theme.style])\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const {\r\n      theme: { style }\r\n    } = nextProps\r\n\r\n    if(this.props.theme.style !== style) {\r\n      muiTheme = createMuiTheme(MaterialTheme[style])\r\n\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { store, children } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <Provider store={store}>\r\n          <Fragment>\r\n            <CssBaseline />\r\n            {children}\r\n          </Fragment>\r\n        </Provider>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n  ({ theme }) => ({\r\n    theme\r\n  }),\r\n  {\r\n    updateTheme: themeReducer.creators.updateTheme\r\n  }\r\n)(Root)\r\n","import indigo from '@material-ui/core/colors/indigo'\r\nimport pink from '@material-ui/core/colors/pink'\r\n\r\nexport default {\r\n  ligth: {\r\n    palette: {\r\n      type     : 'light',\r\n      primary  : indigo,\r\n      secondary: pink\r\n    }\r\n  },\r\n  dark: {\r\n    palette: {\r\n      type     : 'dark',\r\n      primary  : pink,\r\n      secondary: indigo\r\n    }\r\n  }\r\n}\r\n","import base from './base'\r\nimport produce from 'immer'\r\n\r\nexport default base({\r\n  namespace   : 'boilerplate',\r\n  store       : 'theme',\r\n  initialState: {\r\n    style: 'ligth'\r\n  }\r\n}).extend({\r\n  types  : [ 'UPDATE_THEME' ],\r\n  reducer: (state, action, { types }) =>\r\n    produce(state, draft => {\r\n      switch (action.type) {\r\n        case types.UPDATE_THEME:\r\n          localStorage.setItem('style', action.theme)\r\n\r\n          return {\r\n            ...state,\r\n            style: action.theme\r\n          }\r\n        default:\r\n          draft.style = localStorage.getItem('style') || state.style\r\n\r\n          return\r\n      }\r\n    }),\r\n  creators: ({ types: { UPDATE_THEME } }) => ({\r\n    updateTheme: theme => ({ type: UPDATE_THEME, theme })\r\n  })\r\n})\r\n","import Duck from 'extensible-duck'\nimport produce from 'immer'\n\nexport default function createDuck({ namespace, store, initialState = {}, creators, selectors }) {\n  return new Duck({\n    namespace,\n    store,\n    consts: {\n      statuses: [ 'NEW', 'LOADING', 'READY', 'SAVING', 'SAVED', 'DELETED', 'ERROR', 'CANCEL', 'EDITING' ]\n    },\n    types: [\n      'REMOVE',\n      'UPDATE',\n      'FETCH',\n      'FETCH_PENDING',\n      'FETCH_FULFILLED',\n      'FETCH_FAILURE',\n      'FETCH_CANCEL',\n      'FETCH_FOR_PATH',\n      'FETCH_FOR_PATH_PENDING',\n      'FETCH_FOR_PATH_FULFILLED',\n      'FETCH_FOR_PATH_FAILURE',\n      'PUT',\n      'PUT_PENDING',\n      'PUT_FULFILLED',\n      'PUT_FAILURE',\n      'PUT_CANCEL',\n      'PUT',\n      'POST',\n      'POST_PENDING',\n      'POST_FULFILLED',\n      'POST_FAILURE',\n      'POST_CANCEL',\n      'DELETE',\n      'DELETE_PENDING',\n      'DELETE_FULFILLED',\n      'DELETE_FAILURE',\n      'DELETE_CANCEL',\n      'RESET',\n      'PATCH',\n      'PATCH_PENDING',\n      'PATCH_FULFILLED',\n      'PATCH_FAILURE',\n      'PATCH_CANCEL'\n    ],\n    reducer: (state, action, { types, statuses }) => {\n      return produce(state, draft => {\n        switch (action.type) {\n          case types.UPDATE:\n            if(draft.status !== statuses.EDITING) draft.status = statuses.EDITING\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.FETCH_PENDING:\n            draft.status = statuses.LOADING\n\n            return\n          case types.FETCH_FULFILLED:\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_FULFILLED:\n            if(action.dataForPath) draft.dataForPath = action.dataForPath\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_PENDING:\n          case types.POST_PENDING:\n          case types.PUT_PENDING:\n          case types.PATCH_PENDING:\n          case types.DELETE_PENDING:\n            draft.status = statuses.SAVING\n\n            return\n          case types.POST_FULFILLED:\n          case types.PUT_FULFILLED:\n          case types.PATCH_FULFILLED:\n            draft.status = statuses.SAVED\n            if(action.id) draft.id = action.id\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.DELETE_FULFILLED:\n            draft.status = statuses.DELETED\n\n            return\n          case types.FETCH_FOR_PATH_FAILURE:\n          case types.FETCH_FAILURE:\n          case types.PUT_FAILURE:\n          case types.POST_FAILURE:\n          case types.PATCH_FAILURE:\n          case types.DELETE_FAILURE:\n            draft.status = statuses.ERROR\n            draft.error = action.error\n\n            return\n          case types.FETCH_CANCEL:\n          case types.POST_CANCEL:\n          case types.PUT_CANCEL:\n          case types.DELETE_CANCEL:\n          case types.PATCH_CANCEL:\n            draft.status = statuses.CANCEL\n\n            return\n          case types.RESET:\n            return {\n              ...initialState,\n              status: statuses.NEW,\n              error : null\n            }\n          default:\n            return\n        }\n      })\n    },\n    selectors,\n    creators,\n    initialState: ({ statuses }) => ({\n      ...initialState,\n      status: statuses.NEW,\n      error : null\n    })\n  })\n}\n","module.exports = process.env.NODE_ENV === 'production' ? require('./prod') : require('./dev')\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = process.env.NODE_ENV === 'production' ? require('./Root.prod') : require('./Root.dev')\r\n"],"sourceRoot":""}