{"version":3,"sources":["routes/index.js","containers/Dashboard.js","containers/Home.js","App.js","serviceWorker.js","index.js","reducers/index.js","sagas/index.js","store/prod.js","containers/Root.prod.js","lib/MaterialTheme.js","reducers/theme.js","reducers/base.js","store/configureStore.js","sources/logo.svg","containers/Root.js"],"names":["history","Dashboard","react_default","a","createElement","react","AppBar_default","position","Toolbar_default","variant","IconButton_default","aria-label","color","Menu_default","Typography_default","this","props","children","Component","Home","className","alt","src","logo","href","rel","target","routes","es","Switch","containers_Dashboard","Route","component","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Root_default","store","document","getElementById","arguments","length","undefined","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","combineReducers","Object","defineProperty","routing","routerReducer","theme","reducer","rootSaga","regenerator_default","wrap","_context","prev","next","all","stop","_marked","__webpack_require__","d","__webpack_exports__","prod_history","createHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","finalCreateStore","compose","applyMiddleware","apply","createStore","reducers","run","muiTheme","MaterialTheme","ligth","palette","type","primary","indigo","secondary","pink","red","contrastThreshold","background","default","danger","dark","Root","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createMuiTheme","style","nextProps","_this$props","MuiThemeProvider_default","CssBaseline_default","connect","_ref","updateTheme","themeReducer","creators","base","namespace","_ref$initialState","initialState","selectors","Duck","consts","statuses","types","action","_ref2","produce","draft","UPDATE","key","EDITING","payload","FETCH_PENDING","LOADING","FETCH_FULFILLED","READY","FETCH_FOR_PATH_FULFILLED","dataForPath","FETCH_FOR_PATH_PENDING","POST_PENDING","PUT_PENDING","PATCH_PENDING","DELETE_PENDING","SAVING","POST_FULFILLED","PUT_FULFILLED","PATCH_FULFILLED","SAVED","id","DELETE_FULFILLED","DELETED","FETCH_FOR_PATH_FAILURE","FETCH_FAILURE","PUT_FAILURE","POST_FAILURE","PATCH_FAILURE","DELETE_FAILURE","ERROR","FETCH_CANCEL","POST_CANCEL","PUT_CANCEL","DELETE_CANCEL","PATCH_CANCEL","CANCEL","RESET","objectSpread","NEW","_ref3","extend","UPDATE_THEME","module","exports","require","p"],"mappings":"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","file":"static/js/main.2c683bb6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'react-router-redux'\r\n// import loadable from 'loadable-components'\r\n\r\n// import Loading from 'components/Common/Loading'\r\n\r\n// const Dashboard = loadable(() => import(/* webpackChunkName: \"Dashboard\" */ 'containers/Dashboard'), {\r\n//   LoadingComponent: () => <Loading />\r\n// })\r\n\r\n// const Home = loadable(() => import(/* webpackChunkName: \"Home\" */ 'containers/Home'), {\r\n//   LoadingComponent: () => <Loading />\r\n// })\r\n\r\nimport Dashboard from '../containers/Dashboard'\r\nimport Home from '../containers/Home'\r\n\r\nexport default history => (\r\n  <ConnectedRouter history={history}>\r\n    <Switch>\r\n      <Dashboard history={history}>\r\n        <Route component={Home} exact path='/' />\r\n      </Dashboard>\r\n    </Switch>\r\n  </ConnectedRouter>\r\n)\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <AppBar position='static'>\r\n          <Toolbar variant='dense'>\r\n            <IconButton aria-label='Menu' color='inherit'>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography color='inherit' variant='title'>\r\n              create-react-app-v2-boilerplate-redux-saga-material-ui\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.props.children}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react'\r\nimport logo from '../sources/logo.svg'\r\n\r\nimport '../components/App.css'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <img alt='logo' className='App-logo' src={logo} />\r\n          <Typography color='inherit' variant='title'>\r\n            Edit <code>src/containers/Home.js</code> and save to reload.\r\n          </Typography>\r\n          <a\n            className='App-link' href='https://reactjs.org' rel='noopener noreferrer'\n            target='_blank'>\r\n            create-react-app-v2\r\n          </a>\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\n\nimport store, { history } from './store/configureStore'\nimport createRoutes from './routes'\nimport Root from './containers/Root'\n\nconst routes = createRoutes(history)\n\nexport default () => <Root store={store}>{routes}</Root>\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config = {}) {\n  if(process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if(publicUrl.origin !== window.location.origin)\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if(isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if(installingWorker.state === 'installed')\n            if(navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if(config.onUpdate) config.onUpdate(registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if(config.onSuccess) config.onSuccess(registration)\n            }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if(response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1)\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      // Service worker found. Proceed as normal.\n      else registerValidSW(swUrl, config)\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if('serviceWorker' in navigator)\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\nimport './components/index.css'\n\n// const render = Component => {\n//   const renderMethod = !!module.hot ? ReactDOM.render : ReactDOM.hydrate\n//   renderMethod(<Component />, document.getElementById('root'))\n// }\n\n// render(App)\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register()\n","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\n\nimport theme from './theme'\n\nexport default combineReducers({\n  routing      : routerReducer,\n  [theme.store]: theme.reducer\n})\n","import { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n  yield all([])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport reducers from '../reducers'\r\nimport rootSaga from '../sagas'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [ sagaMiddleware, routerMiddleware(history) ]\r\n\r\nconst finalCreateStore = compose(applyMiddleware(...middleware))\r\nconst store = createStore(reducers, initialState, finalCreateStore)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Provider, connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport MaterialTheme from '../lib/MaterialTheme'\r\n\r\nimport themeReducer from '../reducers/theme'\r\n\r\nlet muiTheme\r\n\r\nclass Root extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    muiTheme = createMuiTheme(MaterialTheme[this.props.theme.style])\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const {\r\n      theme: { style }\r\n    } = nextProps\r\n\r\n    if(this.props.theme.style !== style) {\r\n      muiTheme = createMuiTheme(MaterialTheme[style])\r\n\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { store, children } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <Provider store={store}>\r\n          <Fragment>\r\n            <CssBaseline />\r\n            {children}\r\n          </Fragment>\r\n        </Provider>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n  ({ theme }) => ({\r\n    theme\r\n  }),\r\n  {\r\n    updateTheme: themeReducer.creators.updateTheme\r\n  }\r\n)(Root)\r\n","import indigo from '@material-ui/core/colors/indigo'\r\nimport pink from '@material-ui/core/colors/pink'\r\nimport red from '@material-ui/core/colors/red'\r\n\r\nexport default {\r\n  ligth: {\r\n    palette: {\r\n      type             : 'light',\r\n      primary          : indigo,\r\n      secondary        : pink,\r\n      error            : red,\r\n      contrastThreshold: 4,\r\n      background       : {\r\n        'default': red\r\n      }\r\n      // typography: {\r\n      //   fontSize    : 12,\r\n      //   htmlFontSize: 20\r\n      // }\r\n      // primary: {\r\n      // light: purple[300], // will be calculated from palette.primary.main,\r\n      // main: purple[500]\r\n      // dark: purple[700] // will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n      // },\r\n      // secondary: {\r\n      // light: green[300],\r\n      // main: green[500]\r\n      // contrastText: '#ffcc00' //  will be calculated to contrast with palette.secondary.main\r\n      // dark: green[700] // will be calculated from palette.secondary.main,\r\n      // }\r\n    },\r\n    status: {\r\n      danger: 'orange'\r\n    }\r\n    // overrides: {\r\n    //   MuiButton: {\r\n    //     root: {\r\n    //       '&:hover': {\r\n    //         backgroundColor: 'purple',\r\n    //         color          : 'white'\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n    // overrides: {\r\n    //   // Name of the component ⚛️ / style sheet\r\n    //   MuiButton: {\r\n    //     // Name of the rule\r\n    //     root: {\r\n    //       // Some CSS\r\n    //       background  : 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    //       borderRadius: 3,\r\n    //       border      : 0,\r\n    //       color       : 'white',\r\n    //       height      : 48,\r\n    //       padding     : '0 30px',\r\n    //       boxShadow   : '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n    //     }\r\n    //   }\r\n    // }\r\n  },\r\n  dark: {\r\n    palette: {\r\n      type: 'dark'\r\n      // primary  : pink,\r\n      // secondary: indigo\r\n    }\r\n  }\r\n}\r\n","import base from './base'\r\n\r\nexport default base({\r\n  namespace   : 'boilerplate',\r\n  store       : 'theme',\r\n  initialState: {\r\n    style: 'ligth'\r\n  }\r\n}).extend({\r\n  types  : [ 'UPDATE_THEME' ],\r\n  reducer: (state, action, { types }) => {\r\n    switch (action.type) {\r\n      case types.UPDATE_THEME:\r\n        return {\r\n          ...state,\r\n          style: action.theme\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  },\r\n  creators: ({ types: { UPDATE_THEME } }) => ({\r\n    updateTheme: theme => ({ type: UPDATE_THEME, theme })\r\n  })\r\n})\r\n","import Duck from 'extensible-duck'\nimport produce from 'immer'\n\nexport default function createDuck({ namespace, store, initialState = {}, creators, selectors }) {\n  return new Duck({\n    namespace,\n    store,\n    consts: {\n      statuses: [ 'NEW', 'LOADING', 'READY', 'SAVING', 'SAVED', 'DELETED', 'ERROR', 'CANCEL', 'EDITING' ]\n    },\n    types: [\n      'REMOVE',\n      'UPDATE',\n      'FETCH',\n      'FETCH_PENDING',\n      'FETCH_FULFILLED',\n      'FETCH_FAILURE',\n      'FETCH_CANCEL',\n      'FETCH_FOR_PATH',\n      'FETCH_FOR_PATH_PENDING',\n      'FETCH_FOR_PATH_FULFILLED',\n      'FETCH_FOR_PATH_FAILURE',\n      'PUT',\n      'PUT_PENDING',\n      'PUT_FULFILLED',\n      'PUT_FAILURE',\n      'PUT_CANCEL',\n      'PUT',\n      'POST',\n      'POST_PENDING',\n      'POST_FULFILLED',\n      'POST_FAILURE',\n      'POST_CANCEL',\n      'DELETE',\n      'DELETE_PENDING',\n      'DELETE_FULFILLED',\n      'DELETE_FAILURE',\n      'DELETE_CANCEL',\n      'RESET',\n      'PATCH',\n      'PATCH_PENDING',\n      'PATCH_FULFILLED',\n      'PATCH_FAILURE',\n      'PATCH_CANCEL'\n    ],\n    reducer: (state, action, { types, statuses }) => {\n      return produce(state, draft => {\n        switch (action.type) {\n          case types.UPDATE:\n            if(draft.status !== statuses.EDITING) draft.status = statuses.EDITING\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.FETCH_PENDING:\n            draft.status = statuses.LOADING\n\n            return\n          case types.FETCH_FULFILLED:\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_FULFILLED:\n            if(action.dataForPath) draft.dataForPath = action.dataForPath\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_PENDING:\n          case types.POST_PENDING:\n          case types.PUT_PENDING:\n          case types.PATCH_PENDING:\n          case types.DELETE_PENDING:\n            draft.status = statuses.SAVING\n\n            return\n          case types.POST_FULFILLED:\n          case types.PUT_FULFILLED:\n          case types.PATCH_FULFILLED:\n            draft.status = statuses.SAVED\n            if(action.id) draft.id = action.id\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.DELETE_FULFILLED:\n            draft.status = statuses.DELETED\n\n            return\n          case types.FETCH_FOR_PATH_FAILURE:\n          case types.FETCH_FAILURE:\n          case types.PUT_FAILURE:\n          case types.POST_FAILURE:\n          case types.PATCH_FAILURE:\n          case types.DELETE_FAILURE:\n            draft.status = statuses.ERROR\n            draft.error = action.error\n\n            return\n          case types.FETCH_CANCEL:\n          case types.POST_CANCEL:\n          case types.PUT_CANCEL:\n          case types.DELETE_CANCEL:\n          case types.PATCH_CANCEL:\n            draft.status = statuses.CANCEL\n\n            return\n          case types.RESET:\n            return {\n              ...initialState,\n              status: statuses.NEW,\n              error : null\n            }\n          default:\n            return\n        }\n      })\n    },\n    selectors,\n    creators,\n    initialState: ({ statuses }) => ({\n      ...initialState,\n      status: statuses.NEW,\n      error : null\n    })\n  })\n}\n","module.exports = process.env.NODE_ENV === 'production' ? require('./prod') : require('./dev')\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = process.env.NODE_ENV === 'production' ? require('./Root.prod') : require('./Root.dev')\r\n"],"sourceRoot":""}